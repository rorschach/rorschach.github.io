1.为什么需要线程
	未引入线程前，无法解决并发问题

2.线程与进程的关系
	进程是一个程序的一次动态执行，是系统进行资源分配、调度和管理的最小单位，拥有独立的内存单元
	进程是线程内部的一个单一的顺序的控制流，线程间可以共享内存单元

	操作系统 = Collection<进程>
	进程　= Collection<线程>

3.怎么使用线程
	1)继承Thread类实现 
	2)实现Runnable接口实现
	3)两种方式的比较
		资源共享

4.线程的状态
	Thread thread = new Thread();   新建状态
	thread.start();					就绪状态
	runnable.run();					运行状态
	thread.sleep()/suspend()/wait() 阻塞状态
	run ok /thread.stop();			死亡状态

5.线程的方法
	1)得到和设置当前线程的名字
	2)判断线程是否启动
	3)后台线程
	4)阻塞当前线程
	5)线程的休眠
	6)线程的中断
	7)线程的终止
	8)线程的优先级
	9)其他方法

6.定时调度
	1)Timer
	2)TImerTask

7.多线程的同步问题
	1)问题的引出
	2)同步代码块
	3)同步方法
	4)死锁

8.线程间通讯
	1)问题的引出
	2)生产者消费者模型

9.线程池
	1)线程池的组成
	2)线程池的开启
	3)线程池的关闭